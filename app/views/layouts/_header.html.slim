.container.d-flex.flex-column.justify-content-center.text-center
  .d-flex.justify-content-end.mt-3
    .dropdown
      button.btn.btn-secondary.dropdown-toggle type="button" id="userMenu" data-bs-toggle="dropdown" aria-expanded="false"
        i.fa-solid.fa-user-circle.fa-lg
      ul.dropdown-menu[aria-labelledby="userMenu"]
        li
          = link_to 'ログアウト', destroy_user_session_path, method: :delete, data: { turbo_method: :delete }, class: "dropdown-item"

  / 幅が狭いときのハンバーガーメニュー
  nav.navbar.navbar-expand-lg.navbar-light.bg-light.d-lg-none
    .container-fluid
      = link_to root_path, class: "navbar-brand d-flex align-items-center" do
        img src=asset_path("tas.png") alt="" class="img-fluid" style="width: 200px; height:130px;"
      button.navbar-toggler type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation"
        span.navbar-toggler-icon
      .collapse.navbar-collapse#navbarNav
        ul.navbar-nav
          - # ユーザーが設定したメニューを表示
          - if current_user && current_user.respond_to?(:user_menus)
            - current_user.user_menus.includes(:menu).joins(:menu).where(active: true).order('menus.display_order').each do |user_menu|
              li.nav-item
                = link_to resolve_path(user_menu.menu.path), class: "nav-link #{'text-muted' unless current_page?(resolve_path(user_menu.menu.path))}" do
                  i.fa-solid class="#{user_menu.menu.icon} fa-lg"
                  span.ms-2 = user_menu.menu.name
          - else
            - # デフォルトのメニューを表示（ユーザーがログインしていない場合など）
            - Menu.where(active: true).order(display_order: :asc).each do |menu|
              li.nav-item
                = link_to resolve_path(menu.path), class: "nav-link #{'text-muted' unless current_page?(resolve_path(menu.path))}" do
                  i.fa-solid class="#{menu.icon} fa-lg"
                  span.ms-2 = menu.name

  / 幅が大きいときの現在のデザイン
  .d-none.d-lg-block
    .col-12.mb-2
      img src=asset_path("tas.png") alt="" class="img-fluid m-2 mt-4" style="width: 150px; height:100px;"
    - # ユーザーが設定したメニューを表示
    - if current_user && current_user.respond_to?(:user_menus)
      - current_user.user_menus.includes(:menu).joins(:menu).where(active: true).order('menus.display_order').each do |user_menu|
        .col-12.mb-3
          = link_to resolve_path(user_menu.menu.path), class: "link-body-emphasis link-offset-2 link-underline-opacity-0 link-underline-opacity-0-hover d-flex flex-column align-items-center #{'text-muted' unless current_page?(resolve_path(user_menu.menu.path))}" do
            i.fa-solid class="#{user_menu.menu.icon} fa-4x mb-2"
            span.fw-bold = user_menu.menu.name
    - else
      - # デフォルトのメニューを表示（ユーザーがログインしていない場合など）
      - Menu.where(active: true).order(display_order: :asc).each do |menu|
        .col-12.mb-3
          = link_to resolve_path(menu.path), class: "link-body-emphasis link-offset-2 link-underline-opacity-0 link-underline-opacity-0-hover d-flex flex-column align-items-center #{'text-muted' unless current_page?(resolve_path(menu.path))}" do
            i.fa-solid class="#{menu.icon} fa-4x mb-2"
            span.fw-bold = menu.name
